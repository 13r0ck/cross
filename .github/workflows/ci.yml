on: [pull_request, push]

name: CI

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run ShellCheck
        uses: azohra/shell-linter@v0.3.0

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.58.1
          profile: minimal
          components: rustfmt

      - uses: Swatinem/rust-cache@v1.3.0

      - name: rustfmt -- --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.58.1
          profile: minimal
          components: rustfmt

      - uses: Swatinem/rust-cache@v1.3.0

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --locked

  test:
    runs-on: ${{ matrix.os }}
    needs: [fmt, clippy]
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.58.1
          profile: minimal
          components: clippy

      - uses: Swatinem/rust-cache@v1.3.0

      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked
        timeout-minutes: 5

  docker-test:
    runs-on: ubuntu-latest
    needs: [shellcheck]
    if: github.event_name != 'pull_request'
    steps:
      - run: 'true'

  ci:
    name: CI
    needs: [test, docker-test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Result
        run: |
          jq -C <<< "${needs}"

          "$(jq -r 'all(.result as $result | (["success", "skipped"] | contains([$result])))' <<< "${needs}")"
        env:
          needs: ${{ toJson(needs) }}
