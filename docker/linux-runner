#!/bin/bash

set -e

arch=$1
prog=$2

case "$CROSS_RUNNER" in
  native)
    exec $prog
    ;;
  qemu-user)
    exec qemu-$arch $prog
    ;;
  qemu-system)
    true
    ;;
  *)
    echo "Invalid CROSS_RUNNER: $CROSS_RUNNER";
    echo "This is a bug, please report it at https://github.com/japaric/cross"
    exit 1
    ;;
esac

if [ "$arch" = "arm" ]; then
  opt="-machine virt"
fi

if [ "$arch" = "aarch64" ]; then
  opt="-machine virt -cpu cortex-a57"
fi

(
  flock -n 200 || exit 0

  qemu-system-$arch \
    -m 1024 \
    -smp 4 \
    -nographic \
    $opt \
    -kernel /qemu/vmlinuz \
    -initrd /qemu/initrd.gz \
    -serial tcp:127.0.0.1:4444,server,nowait \
    -virtfs local,path=/target,security_model=mapped,mount_tag=target \
    -append init=/init-alt > /dev/null &

  sleep 5

  nc -w 5 127.0.0.1 4444 > /dev/null

) 200>/tmp/qemu.lock

# use a random prefix so we can differenciate the exit code tag from the
# program output
begin_tag="oach8aobiePheew1kahl-start"
end_tag="oach8aobiePheew1kahl-end"

begin=no

# execute the program and then print the exit code
echo "echo $begin_tag; $prog; echo $end_tag \$?" | nc -q -1 127.0.0.1 4444 | while read LINE; do
  LINE=$(echo "$LINE" | tr -d '\r')
  if [[ "$LINE" == "oach8aobiePheew1kahl-start" ]]; then
    begin=yes
    continue
  fi
  if [[ $begin == "no" ]]; then
    continue
  fi
  if [[ "$LINE" == $end_tag* ]]; then
    # kill nc
    for pid in $(ps | grep nc); do
      kill $pid || true
      break
    done
    exit ${LINE##* }
  else
    echo $LINE
  fi
done
