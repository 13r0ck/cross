#!/bin/bash

set -e

# arch in the rust target
arch=$1
shift

case "$CROSS_RUNNER" in
    native)
        exec "${@}"
        ;;
    qemu-user)
        exec qemu-$arch "${@}"
        ;;
    qemu-system)
        true
        ;;
    *)
        echo "Invalid CROSS_RUNNER: $CROSS_RUNNER";
        echo "This is a bug, please report it at https://github.com/japaric/cross"
        exit 1
        ;;
esac

n=$(nproc)
memory=1G
driver9p="virtio-9p-device"
drivernet="virtio-net-device"

# select qemu parameters
case "$arch" in
    aarch64)
        opt="-machine virt -cpu cortex-a57"
        ;;
esac

(
    flock -n 200 || exit 0

    echo Booting QEMU virtual machine with $n cpus...

    touch /tmp/qemu.log

    qemu-system-$arch \
        -m $memory \
        -smp $n \
        -nographic \
        -monitor none \
        -netdev user,id=net0,hostfwd=tcp::10022-:22 \
        -device $drivernet,netdev=net0 \
        -kernel /qemu/kernel \
        -initrd /qemu/initrd.gz \
        $opt \
        -fsdev local,id=fs0,path=/target,security_model=mapped \
        -device $driver9p,fsdev=fs0,mount_tag=target 2>&1 >> /tmp/qemu.log &

    while read line; do
        if [[ "$line" == *"Not backgrounding"* ]]; then
            break
        fi
    done < <(tailf /tmp/qemu.log)

    echo Booted in $(dbclient -K 1 -p 10022 -y -y root@localhost "cut -d' ' -f1 /proc/uptime") seconds

) 200>/tmp/qemu.lock

exec dbclient \
    -t \
    -p 10022 \
    -y -y \
    root@localhost \
    "${@}"
